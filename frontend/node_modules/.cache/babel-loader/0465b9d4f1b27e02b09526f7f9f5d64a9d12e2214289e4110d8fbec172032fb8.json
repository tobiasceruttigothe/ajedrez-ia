{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tobia\\\\OneDrive\\\\Escritorio\\\\ajedrez-ia\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Chessboard } from \"react-chessboard\";\nimport { Chess } from \"chess.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst game = new Chess();\nfunction App() {\n  _s();\n  const [fen, setFen] = useState(game.fen());\n  function onDrop(sourceSquare, targetSquare) {\n    const move = game.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\"\n    });\n    if (move === null) return false;\n    setFen(game.fen());\n    fetch(\"http://localhost:8080/api/analizar\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        fen: game.fen()\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(\"Mejor jugada:\", data.mejorJugada);\n      console.log(\"Evaluación:\", data.evaluacion);\n    });\n    return true;\n  }\n  return /*#__PURE__*/_jsxDEV(Chessboard, {\n    position: fen,\n    onPieceDrop: onDrop\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"Gg3lJLP3fIpD8PB6f5M/Xabye4o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Chessboard","Chess","jsxDEV","_jsxDEV","game","App","_s","fen","setFen","onDrop","sourceSquare","targetSquare","move","from","to","promotion","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","mejorJugada","evaluacion","position","onPieceDrop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tobia/OneDrive/Escritorio/ajedrez-ia/frontend/src/App.jsx"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport { Chessboard } from \"react-chessboard\";\nimport { Chess } from \"chess.js\";\n\nconst game = new Chess();\n\nfunction App() {\n  const [fen, setFen] = useState(game.fen());\n\n  function onDrop(sourceSquare, targetSquare) {\n    const move = game.move({ from: sourceSquare, to: targetSquare, promotion: \"q\" });\n    if (move === null) return false;\n    setFen(game.fen());\n\n    fetch(\"http://localhost:8080/api/analizar\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ fen: game.fen() }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"Mejor jugada:\", data.mejorJugada);\n        console.log(\"Evaluación:\", data.evaluacion);\n      });\n\n    return true;\n  }\n\n  return <Chessboard position={fen} onPieceDrop={onDrop} />;\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,KAAK,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,IAAI,GAAG,IAAIH,KAAK,CAAC,CAAC;AAExB,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAACK,IAAI,CAACG,GAAG,CAAC,CAAC,CAAC;EAE1C,SAASE,MAAMA,CAACC,YAAY,EAAEC,YAAY,EAAE;IAC1C,MAAMC,IAAI,GAAGR,IAAI,CAACQ,IAAI,CAAC;MAAEC,IAAI,EAAEH,YAAY;MAAEI,EAAE,EAAEH,YAAY;MAAEI,SAAS,EAAE;IAAI,CAAC,CAAC;IAChF,IAAIH,IAAI,KAAK,IAAI,EAAE,OAAO,KAAK;IAC/BJ,MAAM,CAACJ,IAAI,CAACG,GAAG,CAAC,CAAC,CAAC;IAElBS,KAAK,CAAC,oCAAoC,EAAE;MAC1CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEd,GAAG,EAAEH,IAAI,CAACG,GAAG,CAAC;MAAE,CAAC;IAC1C,CAAC,CAAC,CACCe,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAACG,WAAW,CAAC;MAC9CF,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,IAAI,CAACI,UAAU,CAAC;IAC7C,CAAC,CAAC;IAEJ,OAAO,IAAI;EACb;EAEA,oBAAO1B,OAAA,CAACH,UAAU;IAAC8B,QAAQ,EAAEvB,GAAI;IAACwB,WAAW,EAAEtB;EAAO;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3D;AAAC7B,EAAA,CAvBQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}